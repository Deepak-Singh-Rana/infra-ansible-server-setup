#!/bin/bash
FILES=()

#manual variables
TABSPACING="\t"

LOGFILE=/var/log/metapod/metapod.log

WHAT="/etc/metapod/resources/auditd"
WHERE="/etc/audit/rules.d"

FILES+=("4.1.4.rules")
FILES+=("4.1.5.rules")
FILES+=("4.1.6.rules")
FILES+=("4.1.7.rules")
FILES+=("4.1.8.rules")
FILES+=("4.1.9.rules")
FILES+=("4.1.10.rules")
FILES+=("4.1.11.rules")
FILES+=("4.1.12.rules")
FILES+=("4.1.13.rules")
FILES+=("4.1.14.rules")
FILES+=("4.1.15.rules")
FILES+=("4.1.16.rules")
FILES+=("4.1.17.rules")
FILES+=("4.1.18.rules")

#automatically set variables
LOCKFOLDER="/etc/metapod/lock"
SCRIPTNAME=`basename $BASH_SOURCE | sed 's/.fix//'`

GREEN=`tput setaf 2`
YELLOW=`tput setaf 3`
RESET=`tput sgr0`

if [ "$1" == "--help" ] || [ "$1" == "-h" ]
then
        echo "Arguments Avalible"
        echo "-h --help       Show this help"
        echo "-d --debug      Show debugging information for Passes and Fails"
        exit 0;
fi
if [ "$1" == "--debug" ] || [ "$1" == "-d" ]; then
        SHOWDEBUG=true
fi

if [ $SHOWDEBUG ]; then
        echo "-----------------"
        echo -e "$SCRIPTNAME:"
fi
echo -e "\n$SCRIPTNAME" >> $LOGFILE
date -u >> $LOGFILE
#check for lock file and don't run if it exists
if [ -f "$LOCKFOLDER/$SCRIPTNAME.lock" ]
then
        echo "$LOCKFOLDER/$SCRIPTNAME.lock"
        echo "lock file exists, therefore not running" >> $LOGFILE
else
##################
#Start Pre Checks#
##################
if [ -d "$WHAT" ]
then
	for FILE in "${FILES[@]}"
	do
		cp $WHAT/$FILE $WHERE/$FILE
		echo -e "cp $WHAT/$FILE $WHERE/$FILE"
		echo -e "cp $WHAT/$FILE $WHERE/$FILE" >> $LOGFILE
	done
else
        echo "$WHERE does not exists, can't copy files to the folder"
        echo "$WHERE does not exists, can't copy files to the folder" >> $LOGFILE
fi
#create a lock file to make sure packages updates can't replace unhardend things
touch "$LOCKFOLDER/$SCRIPTNAME.lock"
fi
