#!/bin/bash

#manual variables
TABSPACING="\t"

LOGFILE=/var/log/metapod/metapod.log

WHERE="/etc/pam.d/su"
WHERE2="/etc/group"
#automatically set variables
LOCKFOLDER="/etc/metapod/lock"
SCRIPTNAME=`basename $BASH_SOURCE | sed 's/.fix//'`

GREEN=`tput setaf 2`
YELLOW=`tput setaf 3`
RESET=`tput sgr0`

if [ "$1" == "--help" ] || [ "$1" == "-h" ]
then
        echo "Arguments Avalible"
        echo "-h --help       Show this help"
        echo "-d --debug      Show debugging information for Passes and Fails"
        exit 0;
fi
if [ "$1" == "--debug" ] || [ "$1" == "-d" ]; then
        SHOWDEBUG=true
fi

if [ $SHOWDEBUG ]; then
        echo "-----------------"
        echo -e "$SCRIPTNAME:"
fi
echo -e "\n$SCRIPTNAME" >> $LOGFILE
date -u >> $LOGFILE
#check for lock file and don't run if it exists
if [ -f "$LOCKFOLDER/$SCRIPTNAME.lock" ]
then
        echo "$LOCKFOLDER/$SCRIPTNAME.lock"
        echo "lock file exists, therefore not running" >> $LOGFILE
else
##################
#Start Pre Checks#
##################
# auth       required   pam_wheel.so
CHECK=`grep "pam_wheel.so" $WHERE | grep "use_uid"`
CHECK2=`grep "^wheel" /etc/group`

if [ "$CHECK" == "" ]
then
	echo "adding use_uid"
	echo -e "sed -i 's/\(^#.*auth.*required.*pam_wheel.so$\)/\1\nauth required pam_wheel.so use_uid/' $WHERE" >> $LOGFILE
	sed -i 's/\(^#.*auth.*required.*pam_wheel.so$\)/\1\nauth required pam_wheel.so use_uid/' $WHERE
else
	echo "use_uid already exists, doing nothing"
fi
if [ "$CHECK2" == "" ]
then
	echo "wheel group does not exist, adding it"
	echo -e "echo \"wheel:x:99:root,zeus\" >> $WHERE2" >> $LOGFILE
	echo "wheel:x:99:root,zeus" >> $WHERE2
else
	echo "wheel group exists, doing nothing"
fi
#create a lock file to make sure packages updates can't replace unhardend things
touch "$LOCKFOLDER/$SCRIPTNAME.lock"
fi
