#learn what packages are installed
- name: Make sure splunk server package is not installed
  package_facts:
    manager: auto

#learn if splunk binary exists
- name: Check if the splunk binary exists
  stat:
    path: /opt/splunkforwarder/bin/splunk
  register: splunk_file_check_result


- name: Stop the splunk service
  command: /bin/systemctl stop splunk.service
  when:
   - splunk_file_check_result.stat.exists == True

- name: copy splunk rmp to remote computer for ubuntu
  copy:
    src: installers/splunkforwarder-8.2.2-87344edfcdb4-linux-2.6-amd64.deb
    dest: /tmp/splunkforwarder.deb
  ignore_errors: yes
  when: ansible_facts['distribution'] == 'Ubuntu'

- name: copy splunk rmp to remote computer for redhat
  copy:
    src: installers/splunkforwarder-8.2.2-87344edfcdb4-linux-2.6-x86_64.rpm
    dest: /tmp/splunkforwarder.rpm
  ignore_errors: yes
  when: ansible_facts['distribution'] == 'CentOS' or ansible_facts['distribution'] == 'RedHat'

- name: Install the latest splunkforwarder package for ubuntu
  apt:
    deb: /tmp/splunkforwarder.deb
  when: ansible_facts['distribution'] == 'Ubuntu'

- name: Install the latest splunkforwarder package for redhat
  yum:
    name: /tmp/splunkforwarder.rpm
    state: present
  ignore_errors: yes
  when: ansible_facts['distribution'] == 'CentOS' or ansible_facts['distribution'] == 'RedHat'

- name: Re-Accept the splunk licence
  command: /opt/splunkforwarder/bin/splunk enable boot-start --accept-license --answer-yes --no-prompt -user splunk
  when:
   - splunk_file_check_result.stat.exists == True

#- name: clean up files to make sure we have fresh file on next splunk startreboot
#  ansible.builtin.command:
#    argv:
#      - /opt/splunkforwarder/bin/splunk
#      - clone-prep-clear-config

#- name: Start the splunk service
#  command: /bin/systemctl start splunk.service
#  when:
#   - splunk_file_check_result.stat.exists == True
