###################################
#######configure the server########
###################################

- hosts: newservers
  remote_user: zeus
  become: yes
  become_method: sudo
  gather_facts: true
  serial: 5
  vars:
    - ansible_ssh_private_key_file: "./tmp/ansible-deploy.key"
    - ansible_python_interpreter: /usr/bin/python3
    - vm_domain: 2dl.nz
  vars_files:
    - "../tmp/{{inventory_hostname}}.yml"
#inventory_hostname
  roles:
#place signed host_keys onto the server
    - configure_hostcerts
#disable unattended upgrades
    - role: disable_unattended_upgrades
      when: (ansible_facts['distribution'] == "Ubuntu" and ansible_facts['distribution_major_version'] >= "20")
#setup base connectivity
    - newserver_networking
#configures the hostname of the server
    - configure_hostname
#cleans up the server so clones of templates become indipendant from each other
    - clean_serverscript
#configure satellite subscription if server is redhat
    - role: configure_rhel_subscription
      when: (ansible_facts['distribution'] == "RedHat" and ansible_facts['distribution_major_version'] >= "7")
#configures the repositories that the OS uses to get updates and software
    - configure_repos
#sets up loging on the servers
    - install_2dlogging
#make sure server can reach it's set repository
    - base_role
#deployes required 2degrees certificates onto the servers
    - deploy_certs
#configure canonical landscape subscription
    - role: configure_ubuntu_subscription
      when: (ansible_facts['distribution'] == "Ubuntu" and ansible_facts['distribution_major_version'] >= "18")
#setups 2degrees standard firewall
    - install_2d-firewall
#configure automatic rebooting if requested
    - role: configure_autoreboot
      when: (vm_autoreboot_time is defined)
#configures the servers to allow them to email out if need be
    - install_email
#install and configure auditd for auditing purposes
    - install_auditd
#install crowdstrike agent
    - install_crowdstrike
#install tennable agent
    - install_tennable
#install linux virus scanner
#    - role: install_clamav
#      when: (ansible_facts['distribution'] == "Ubuntu" and ansible_facts['distribution_major_version'] >= "18") or
#            (ansible_facts['distribution'] == 'RedHat' and ansible_distribution_version >= '8')
#configures the home folder to 2degrees standards
    - install_2dhome-ipa
#configures ssh to 2degrees hardened standard
    - install_2dssh-ipa
#sets up ntp on the server
    - install_ntp-ipa
#configure ipa auth
    - configure_ipaauth
#configure ipa details on the ipa server
    - configure_ipahost
#sets up splunk forwarder to send logs to splunk forwarder
#    - install_splunk
#configures the login messages to TASS/PCI/SOX standards
    - install_branding
#installs usefull sysadmin tools
    - install_2dutils
#installs rootkit detection
#    - role: install_rkhunter
#      when: (ansible_facts['distribution'] == "Ubuntu" and ansible_facts['distribution_major_version'] >= "18") or
#            (ansible_facts['distribution'] == 'RedHat' and ansible_distribution_version >= '8')
#configurs snmpd to allow thigns to send traps to zenoss
    - install_2dsnmpd
#setups zenoss user for zenoss management
    - configure_zenoss-ipa
#Hardens ubuntu 18 to level2 compliance
    - role: harden_ub18
      when: (ansible_facts['distribution'] == "Ubuntu" and ansible_facts['distribution_major_version'] == "18")
#Hardens ubuntu 20 to level2 compliance
    - role: harden_ub20
      when: (ansible_facts['distribution'] == "Ubuntu" and ansible_facts['distribution_major_version'] == "20")
#Hardens ubuntu 22 to level2 compliance
    - role: harden_ub22
      when: (ansible_facts['distribution'] == "Ubuntu" and ansible_facts['distribution_major_version'] == "22")
#Hardens redhat8 to level2 compliance
    - role: harden_rhel8
      when: (ansible_facts['distribution'] == "RedHat" and ansible_facts['distribution_major_version'] == "8")
#setup vulnerability scanning
#    - configure_upguardaccess-ipa
#install cockpit
    - install_cockpit
#setup cmdb scanning
    - configure_device42access-ipa
#install aide late so we don't have heaps of changes for the next scan because we are setting up the os
    - install_2daide
#Auto updates come at the end so it doens't start updating while we are setting up the vm
    - install_autoupdates
#install backups
    - install_commvault
#setups breakglass utils/permissions
    - configure_bgaccounts
#disable unneded services
    - disable_services
#run the postinstall cleanup role
    - postinstall_cleanup
